name: Library Builder

on:
  workflow_dispatch:
    inputs: {}

jobs:
  generate-workdir:
    name: Generate the workdir
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: "Setup NodeJs"
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: "Cache the dependencies"
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: "Install dependencies"
        run: npm ci --no-progress
      - name: "Generate the workdir"
        run: npm run generate:workdir
      - name: "Tar tmp directory"
        run: |
          mkdir -p .tmp
          tar cf tmp.tar .tmp
        working-directory: .workdir
      - name: "Upload the workdir"
        uses: actions/upload-artifact@v2
        with:
          name: workdir
          path: |
            .workdir/tmp.tar
            .workdir/source
            .workdir/library.yaml

  generate-distribution:
    name: Generate the distribution
    runs-on: ubuntu-20.04
    container: docker://thibaultmorin/plantuml-generator:1
    needs: [ generate-workdir ]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - uses: actions/download-artifact@v2
        with:
          name: workdir
      - name: "Provide the .tmp directory"
        run: tar xf tmp.tar
      - name: "Delete the distribution content"
        run: rm -Rf distribution/*
      - name: "Generate the distribution"
        run: plantuml-generator library generate library.yaml
      - name: "Tar distribution directory"
        run: tar cf distribution.tar distribution
      - name: "Upload the distribution"
        uses: actions/upload-artifact@v2
        with:
          name: distribution
          path: distribution.tar

  push-distribution:
    name: Push the distribution
    runs-on: ubuntu-20.04
    needs: [ generate-distribution ]
    steps:
      - uses: actions/checkout@v2
      - name: "Delete distribution"
        run: rm -Rf distribution
      - uses: actions/download-artifact@v2
        with:
          name: distribution
      - name: "Provide the distribution directory"
        run: |
          tar xf distribution.tar
          rm distribution.tar
      - run: ls -hla
      - name: "Commit changes"
        run: |
          git config --local user.email "package_builder@users.noreply.github.com"
          git config --local user.name "package_builder"
          git add -A
          git commit -m "feat: refresh all packages"
      - name: "Push the changes"
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
